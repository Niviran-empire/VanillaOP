#	同步追踪|3.14.15	cstorms.1000/cstorms.1050/cstorms.1100
namespace = cstorms


#	每月从被风暴影响的星球/星系收取资源		改为年检+变量调整
#_note	var|PF_var_cntr_V_country_storms_PRODUCES_unity|配合国家容器产生资源,无需不断设置修正
event = {
	id = cstorms.1000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_cosmic_storms_dlc = yes
		has_global_flag = cosmic_storm_has_occurred
	}

	immediate = {
		every_playable_country = {
			##	按星系产出
			if = {
				limit = {
					is_galactic_community_member = yes
					is_active_resolution = "resolution_cosmic_storms_shared_knowledge"
				}
				
				set_variable = { which = PF_var_cntr_V_country_storms_PRODUCES_unity	value = 0 }
				#	Count
				every_system_within_border = {
					limit = { has_star_flag = storm_system }
					prev = { change_variable = { which = PF_var_cntr_V_country_storms_PRODUCES_unity	value = 60 } }
				}
			}
			##	按星球产出
			else_if = {
				limit = {
					is_galactic_community_member = yes
					OR = {
						is_active_resolution = "resolution_cosmic_storms_protection_initiative"
						is_active_resolution = "resolution_cosmic_storms_galactic_management"
						is_active_resolution = "resolution_cosmic_storms_utilization_protocols"
						is_active_resolution = "resolution_cosmic_storms_manipulation_mandate"
					}
				}

				set_variable = { which = PF_var_cntr_V_country_storms_PRODUCES_unity	value = 0 }
				#	Count
				every_planet_within_border = {
					limit = {
						has_owner = yes
						solar_system = { has_star_flag = storm_system }
					}
					prev = { change_variable = { which = PF_var_cntr_V_country_storms_PRODUCES_unity	value = 60 } }
				}
				#	Tier 3 and 4 of the resolutions gain 2 unity per planet and the final tier 3 per planet.
				if = {
					limit = {
						OR = {
							is_active_resolution = "resolution_cosmic_storms_galactic_management"
							is_active_resolution = "resolution_cosmic_storms_utilization_protocols"
						}
					}
					multiply_variable = { which = PF_var_cntr_V_country_storms_PRODUCES_unity	value = 2 }
				}
				else_if = {
					limit = { is_active_resolution = "resolution_cosmic_storms_manipulation_mandate" }
					multiply_variable = { which = PF_var_cntr_V_country_storms_PRODUCES_unity	value = 3 }
				}
			}
			#	CLEAR
			else_if = {
				limit = { is_variable_set = PF_var_cntr_V_country_storms_PRODUCES_unity }
				clear_variable = PF_var_cntr_V_country_storms_PRODUCES_unity
			}
		}
	}
}

# Monthly unity gain from low health ships affected by Particle Storm (see on_monthly_pulse)
event = {
	id = cstorms.1050
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		always = no	#_|VOP优化|	禁用,直接覆盖风暴属性实现
		#has_cosmic_storms_dlc = yes
		#has_global_flag = cosmic_storm_has_occurred
	}

	immediate = {
		every_playable_country = {
			# Reset counters
			set_variable = { which = storm_affected_ship_count value = 0 }
			create_variable_if_not_exists = { VARIABLE = prev_storm_affected_ship_count VALUE_IF_CREATED = 0 }

			# Count
			every_owned_ship = {
				limit = {
					has_hp_percentage <= @storm_hp_perc_limit
					exists = solar_system
					solar_system = { is_inside_storm = particle_storm }
				}

				PREV = { change_variable = { which = storm_affected_ship_count value = 60 } }
			}

			# Update/remove modifier as needed
			update_modifier_amount_if_needed = {
				MODIFIER = particle_storm_ship_unity_gain_modifier
				MULT_VAR = storm_affected_ship_count
				PREV_MULT_VAR = prev_storm_affected_ship_count
			}
		}
	}
}

# Cosmic Storms monthly affects
event = {
	id = cstorms.1100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		always = no	#_|VOP优化|	禁用,直接覆盖风暴属性实现
		#has_cosmic_storms_dlc = yes
		#has_global_flag = cosmic_storm_has_occurred
		#any_cosmic_storm = {
		#	OR = {
		#		is_storm_type = electric_storm
		#		is_storm_type = particle_storm
		#		is_storm_type = nexus_storm
		#	}
		#}
	}

	immediate = {
		every_cosmic_storm = {
			if = {
				limit = { is_storm_type = electric_storm }
				every_system_within_storm = {
					every_ship_in_system = {
						limit = { 
							has_shield_hp > 0 
							owner = { is_invisable_faction = no }
						}
						reduce_shield = value:storm_ship_damage_received|DMG|@storm_monthly_dmg_low|
					}
				}
			}
			else_if = {
				limit = { is_storm_type = particle_storm }
				every_system_within_storm = {
					every_ship_in_system = {
						limit = { 
							has_hp_percentage > @storm_hp_perc_limit 
							owner = { is_invisable_faction = no }
						}
						damage_ship = value:storm_ship_damage_received|DMG|@storm_monthly_dmg_low|
					}
				}
			}
			else_if = {
				limit = { is_storm_type = nexus_storm }
				every_system_within_storm = {
					every_ship_in_system = {
						limit = { 
							has_hp_percentage > @storm_hp_perc_limit 
							owner = { is_invisable_faction = no }
						}
						damage_ship = value:storm_ship_damage_received|DMG|@storm_monthly_dmg_high|
					}
				}
			}
		}
	}
}