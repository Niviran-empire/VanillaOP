#	|VOP新增/VOP优化|	同步追踪|3.14.159	\events\grand_archive_events.txt		grand_archive.7400
namespace = grand_archive
ship_event = {
	id = grand_archive.1
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_space_fauna = no
		OR = {
			is_ship_class = shipclass_military
			is_ship_class = shipclass_military_special
		}
		owner = { NOT = { has_country_flag = built_artificial_ship } }
	}

	immediate = { owner = { set_country_flag = built_artificial_ship } }
}

country_event = {#_|VOP新增|添加trigger
	id = grand_archive.7400
	hide_window = yes
	is_triggered_only = yes

	trigger = {#_|VOP新增|
		OR = {
			last_increased_tech = tech_controlled_mutations
			last_increased_tech = tech_thrusters_2
			last_increased_tech = tech_hyper_drive_2
			last_increased_tech = tech_sensors_2
			last_increased_tech = tech_combat_computers_2
		}
	}

	immediate = {
		if = {
			limit = {
				last_increased_tech = tech_controlled_mutations
			}
			if = {
				limit = {
					has_technology = tech_thrusters_2
					NOT = { has_technology = tech_thrusters_bio_integration }
				}
				add_research_option = tech_thrusters_bio_integration
			}
			if = {
				limit = {
					has_technology = tech_hyper_drive_2
					NOT = { has_technology = tech_hyper_drive_bio_integration }
				}
				add_research_option = tech_hyper_drive_bio_integration
			}
			if = {
				limit = {
					has_technology = tech_sensors_2
					NOT = { has_technology = tech_sensors_bio_integration }
				}
				add_research_option = tech_sensors_bio_integration
			}
			if = {
				limit = {
					has_technology = tech_combat_computers_2
					NOT = { has_technology = tech_combat_computers_bio_integration }
				}
				add_research_option = tech_combat_computers_bio_integration
			}
		}
		else_if = {
			limit = {
				last_increased_tech = tech_thrusters_2
				has_technology = tech_controlled_mutations
				NOT = { has_technology = tech_thrusters_bio_integration }
			}
			add_research_option = tech_thrusters_bio_integration
		}
		else_if = {
			limit = {
				last_increased_tech = tech_hyper_drive_2
				has_technology = tech_controlled_mutations
				NOT = { has_technology = tech_hyper_drive_bio_integration }
			}
			add_research_option = tech_hyper_drive_bio_integration
		}
		else_if = {
			limit = {
				last_increased_tech = tech_sensors_2
				has_technology = tech_controlled_mutations
				NOT = { has_technology = tech_sensors_bio_integration }
			}
			add_research_option = tech_sensors_bio_integration
		}
		else_if = {
			limit = {
				last_increased_tech = tech_combat_computers_2
				has_technology = tech_controlled_mutations
				NOT = { has_technology = tech_combat_computers_bio_integration }
			}
			add_research_option = tech_combat_computers_bio_integration
		}
	}
}


country_event = {
	id = grand_archive.10065
	hide_window = yes

	is_triggered_only = yes

	trigger = {#_|VOP新增||添加trigger|
		exists = fromfrom
		fromfrom = { check_variable_arithmetic = {
			which = value:scripted_modifier_add|MODIFIER|heal_random_fleet_creature_on_death|
			value > 0
		} }
	}

	immediate = {
		set_variable = {
			which = local_heal_value
			value = fromfrom.value:scripted_modifier_add|MODIFIER|heal_random_fleet_creature_on_death|
		}
		if = {
			limit = { check_variable = { which = local_heal_value value > 0 } }

			fromfrom.fleet = {
				random_controlled_ship = {
					limit = {
						is_space_fauna = yes
						NOT = { is_same_value = fromfrom }
						has_hp_percentage < 1.0
					}
					repair_percentage = root.local_heal_value
					repair_armor_percentage = root.local_heal_value
				}
			}
		}
	}
}

# Cutholoid revealed on_entering_system_fleet
# Scope = fleet
# From = System
fleet_event = {
	id = grand_archive.3030
	hide_window = yes
	is_triggered_only = yes

	trigger = {#_|VOP新增||添加trigger|
		has_grand_archive_dlc = yes
		exists = event_target:cutholoids_country
		controller = {
			is_country_type = default
			has_communications = event_target:cutholoids_country
		}
		from = { any_system_planet = { is_planet_class = pc_cutholoid } }
	}

	immediate = {
		from = {
			every_system_planet = {
				limit = { is_planet_class = pc_cutholoid }
				save_event_target_as = revealed_cutholoid
				spawn_cutholoid_from_asteroid = {
					LOCATION = event_target:revealed_cutholoid
				}
			}
		}
	}
}