#	|VOP新增/VOP优化|	同步追踪|4.0	\events\grand_archive_events.txt		grand_archive.10065/grand_archive.10090
#	grand_archive.10090=直接禁用
namespace = grand_archive

country_event = {
	id = grand_archive.10065
	hide_window = yes

	is_triggered_only = yes

	trigger = {#_|VOP新增|添加trigger
		exists = fromfrom
		fromfrom = { check_variable_arithmetic = {
			which = value:scripted_modifier_add|MODIFIER|heal_random_fleet_creature_on_death|
			value > 0
		} }
	}

	immediate = {
		set_variable = {
			which = local_heal_value
			value = fromfrom.value:scripted_modifier_add|MODIFIER|heal_random_fleet_creature_on_death|
		}
		if = {
			limit = { check_variable = { which = local_heal_value value > 0 } }

			fromfrom.fleet = {
				random_controlled_ship = {
					limit = {
						is_space_fauna = yes
						NOT = { is_same_value = fromfrom }
						has_hp_percentage < 1.0
					}
					repair_percentage = root.local_heal_value
					repair_armor_percentage = root.local_heal_value
				}
			}
		}
	}
}


# Catalytic Bladder unique mutation damage upon death
country_event = {
	id = grand_archive.10090
	hide_window = yes

	is_triggered_only = yes

	trigger = {#_|VOP新增|添加trigger
		exists = fromfrom
		fromfrom = { check_modifier_value = { modifier = damage_random_nearby_enemy_on_death	value > 0 } }
	}

	immediate = {
		set_variable = {
			which = local_damage_percentage
			value = fromfrom.value:scripted_modifier_add|MODIFIER|damage_random_nearby_enemy_on_death|
		}
		if = {
			limit = {
				check_variable = { which = local_damage_percentage value > 0 }
			}
			fromfrom.solar_system = {
				random_ship_in_system = {
					limit = {
						owner = {
							is_same_value = root.from
						}
						distance = {
							source = root.fromfrom
							max_distance <= 30
							same_solar_system = yes
						}
					}

					root.fromfrom = {
						export_trigger_value_to_variable = {
							trigger = has_max_hp
							variable = local_max_hp
						}
						export_trigger_value_to_variable = {
							trigger = has_max_armor_hp
							variable = local_max_armor_hp
						}
					}
					change_variable = {
						which = local_damage_value
						value = local_max_hp
					}
					change_variable = {
						which = local_damage_value
						value = local_max_armor_hp
					}
					multiply_variable = {
						which = local_damage_value
						value = local_damage_percentage
					}
					damage_ship = local_damage_value
				}
			}

			play_sound = { # Sound played on ship explosion
				sound = ga_weapon_catalytic_bladder
				location = fromfrom
			}
		}
	}
}

