namespace = action
event = {
	id = action.85
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_country = {
			any_owned_planet = {
				exists = starbase
				starbase = { owner = { NOR = { is_same_value = prevprevprev is_at_war_with = prevprevprev } } }
			}
			OR = { is_country_type = default is_fallen_empire = yes }
		}
	}

	immediate = {
		every_galaxy_planet = {
			limit = {
				exists = owner
				owner = {
					OR = {
						is_country_type = default
						is_fallen_empire = yes
					}
				}
				exists = starbase
				starbase = {
					exists = owner
					owner = {
						OR = {
							is_country_type = default
							is_fallen_empire = yes
						}
						NOR = {
							is_same_value = prevprev.owner
							is_at_war_with = prevprev.owner
						}
						NOT = {
							has_active_event = {
								preftl.180 #event to decide fate of primitive civ
							}
						}
					}
				}
			}
			planet_event = { id = action.86 } # planet flips to starbase owner
		}
	}
}

event = {
	id = action.90
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_playable_country = { any_owned_planet = {
			is_controlled_by = PREV
			solar_system = { NOT = { exists = starbase } }
		} }
		NOT = { any_country = { is_nivirana_battle_country = yes } }
	}
	immediate = {
		every_system = {
			limit = {
				NOT = { exists = starbase }
				any_system_colony = {
					exists = owner
					has_ground_combat = no
					owner = { OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					} }
					solar_system = { NOR = {
						any_fleet_in_system = {
							exists = owner
							owner = {
								NOT = { is_same_value = prevprevprev.owner }
								OR = {
									is_hostile = prevprevprev.owner
									is_at_war_with = prevprevprev.owner
								}
							}
						}
						any_fleet_in_system = {
							exists = controller
							controller = {
								NOT = { is_same_value = prevprevprev.owner }
								OR = {
									is_hostile = prevprevprev.owner
									is_at_war_with = prevprevprev.owner
								}
							}
						}
						any_system_colony = {
							exists = owner
							NOT = { is_same_value = prevprev }
							owner = {
								NOT = { is_same_value = prevprevprev.owner }
								OR = {
									is_country_type = default
									is_country_type = fallen_empire
									is_country_type = awakened_fallen_empire
								}
							}
						}
					} }
				}
			}
			random_system_colony = {
				limit = {
					exists = owner
					has_ground_combat = no
					owner = { OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					} }
					solar_system = { NOR = {
						any_fleet_in_system = {
							exists = owner
							owner = {
								NOT = { is_same_value = prevprevprev.owner }
								OR = {
									is_hostile = prevprevprev.owner
									is_at_war_with = prevprevprev.owner
								}
							}
						}
						any_fleet_in_system = {
							exists = controller
							controller = {
								NOT = { is_same_value = prevprevprev.owner }
								OR = {
									is_hostile = prevprevprev.owner
									is_at_war_with = prevprevprev.owner
								}
							}
						}
						any_system_colony = {
							exists = owner
							owner = {
								NOT = { is_same_value = prevprevprev.owner }
								OR = {
									is_country_type = default
									is_country_type = fallen_empire
									is_country_type = awakened_fallen_empire
								}
							}
						}
					} }
				}
				planet_event = { id = action.91 }
			}
		}
	}
}

# on_colony_5_year_pulse
planet_event = {
	id = action.222
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = owner
		owner = {
			has_origin = origin_doomsday
			is_ai = yes
			any_owned_planet = {
				has_planet_flag = doomed_planet_origin
			}
		}
		NOT = { has_planet_flag = doomed_planet_origin }
	}

	immediate = {
		if = { #save the AI from doomsday if it manages to colonise
			limit = {
				exists = owner
				owner = {
					has_origin = origin_doomsday
					is_ai = yes
					any_owned_planet = {
						has_planet_flag = doomed_planet_origin
					}
				}
				NOT = { has_planet_flag = doomed_planet_origin }
			}
			owner = {
				random_owned_planet = {
					limit = {
						has_planet_flag = doomed_planet_origin
						num_pops > 3
					}
					while = {
						count = 3
						random_owned_pop = {
							limit = {
								OR = {
									prev = { has_modifier = doomsday_5 }
									root = {
										habitability = {
											who = prev.species
											value > 0.3
										}
									}
								}
							}
							resettle_pop = {
								pop = this
								planet = root
							}
						}
					}
				}
			}
		}
	}
}

# Enable resources for Galactic Market
event = {
	id = action.116
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		years_passed < 50
		has_global_flag = galactic_market_founded

		OR = {
			NOT = { is_on_market = volatile_motes }
			NOT = { is_on_market = exotic_gases }
			NOT = { is_on_market = rare_crystals }
			NOT = { is_on_market = sr_living_metal }
			NOT = { is_on_market = sr_zro }
			NOT = { is_on_market = sr_dark_matter }
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = { is_on_market = volatile_motes }
				any_playable_country = {
					is_galactic_community_member = yes
					resource_stockpile_compare = { resource = volatile_motes value >= 1 }
				}
			}
			enable_on_market = volatile_motes
		}
		else_if = {
			limit = {
				NOT = { is_on_market = exotic_gases }
				any_playable_country = {
					is_galactic_community_member = yes
					resource_stockpile_compare = { resource = exotic_gases value >= 1 }
				}
			}
			enable_on_market = exotic_gases
		}
		else_if = {
			limit = {
				NOT = { is_on_market = rare_crystals }
				any_playable_country = {
					is_galactic_community_member = yes
					resource_stockpile_compare = { resource = rare_crystals value >= 1 }
				}
			}
			enable_on_market = rare_crystals
		}
		else_if = {
			limit = {
				NOT = { is_on_market = sr_living_metal }
				any_playable_country = {
					is_galactic_community_member = yes
					resource_stockpile_compare = { resource = sr_living_metal value >= 1 }
				}
			}
			enable_on_market = sr_living_metal
		}
		else_if = {
			limit = {
				NOT = { is_on_market = sr_zro }
				any_playable_country = {
					is_galactic_community_member = yes
					resource_stockpile_compare = { resource = sr_zro value >= 1 }
				}
			}
			enable_on_market = sr_zro
		}
		else_if = {
			limit = {
				NOT = { is_on_market = sr_dark_matter }
				any_playable_country = {
					is_galactic_community_member = yes
					resource_stockpile_compare = { resource = sr_dark_matter value >= 1 }
				}
			}
			enable_on_market = sr_dark_matter
		}
	}
}

system_event = {
	id = action.301
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		any_system_megastructure = {
			OR = {
				is_megastructure_type = gateway_ruined
				is_megastructure_type = gateway_restored
				is_megastructure_type = gateway_final
				is_megastructure_type = hyper_relay_ruined
				is_megastructure_type = hyper_relay_restored
				is_megastructure_type = hyper_relay
			}
			exists = owner
			owner = { NOT = { is_same_value = from } }
		}
	}
	immediate = {
		every_system_megastructure = {
			limit = {
				OR = {
					is_megastructure_type = gateway_ruined
					is_megastructure_type = gateway_restored
					is_megastructure_type = gateway_final
					is_megastructure_type = hyper_relay_ruined
					is_megastructure_type = hyper_relay_restored
					is_megastructure_type = hyper_relay
				}
			}
			set_owner = FROM
		}
	}
}

system_event = {
	id = action.300
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		any_system_megastructure = {
			OR = {
				is_megastructure_type = gateway_ruined
				is_megastructure_type = gateway_restored
				is_megastructure_type = gateway_final
				is_megastructure_type = hyper_relay_ruined
				is_megastructure_type = hyper_relay_restored
				is_megastructure_type = hyper_relay
			}
			exists = owner
			owner = { NOT = { is_same_value = from } }
		}
	}
	immediate = {
		every_system_megastructure = {
			limit = {
				OR = {
					is_megastructure_type = gateway_ruined
					is_megastructure_type = gateway_restored
					is_megastructure_type = gateway_final
					is_megastructure_type = hyper_relay_ruined
					is_megastructure_type = hyper_relay_restored
					is_megastructure_type = hyper_relay
				}
			}
			set_owner = FROM
		}
	}
}