@noxious_happiness_penalty = -0.01
@pop_happiness_unemply_rate = 0.10
######rule################################
#system
vop_optimaze_game_rule_system_sensor = {
	every_system = {
		remove_star_flag = can_enable_can_be_system_blocks_sensors
		if = {
			limit = { OR = {
				##_|星云|	+RS/Sexp
				is_inside_nebula = yes
				has_modifier = space_storm
				##_|封印星系|	+Sexp
				has_star_flag = lcluster
				has_star_flag = sealed_system
			} }
			set_star_flag = can_enable_can_be_system_blocks_sensors
		}
	}
}
#can_vote_in_democratic_election
vop_optimaze_game_rule_can_vote_in_democratic_election = {
	remove_pop_group_flag = can_enable_pop_election_vote
	if = {
		limit = { 
			has_citizenship_rights = yes
			is_sapient = yes
			is_enslaved = no
			is_being_purged = no
		}
		set_pop_group_flag = can_enable_pop_election_vote
	}
}
vop_optimaze_game_rule_can_generate_leader_from_pop = {
	remove_pop_group_flag = can_enable_can_generate_leader_from_pop
	remove_pop_group_flag = can_enable_can_generate_military_leader_from_pop
	if = {
		limit = { 
			has_citizenship_rights = yes
			can_think = yes
			OR = {
				is_robot_pop_group = no
				owner = {
					OR = {
						has_technology = tech_synthetic_leaders
						is_machine_empire = yes
						is_mechanical_empire = yes
						is_individual_machine = yes
					}
				}
			}
			OR = {
				is_same_species = owner
				owner = {
					NAND = {
						has_origin = origin_necrophage
						has_trait = trait_necrophage
					}
				}
			}
		}
		if = {
			limit = { can_be_military_leader = yes }
			set_pop_group_flag = can_enable_can_generate_military_leader_from_pop
		}
		set_pop_group_flag = can_enable_can_generate_leader_from_pop
	}
}
#species
vop_optimaze_game_rule_can_has_food_upkeep = {
	remove_species_flag = can_has_food_upkeep
	if = {
		limit = {  
			OR = {
				is_archetype = BIOLOGICAL
				is_archetype = STARSHIPGIRLS
				is_archetype = Dolls
				is_archetype = DEITY
				is_archetype = ASCENDED
				is_archetype = KANSEN
				is_archetype = NYTO
				is_archetype = KZ_VOY_TERRAN_DESCENDANT
				is_archetype = KZ_VOY_TERRAN_GAIA
				is_archetype = WARSHIPGIRL
				is_archetype = SHENHAI
				is_archetype = NANITES_CROP
				is_archetype = UNITED_FLEET
				is_archetype = TOUHOUGIRLS
				is_archetype = KANMUSU
				is_archetype = SHINKAI
				is_archetype = GENSO_POP
				is_archetype = REMILIA
				is_archetype = LITTLE_DEVIL
				is_archetype = SFDOLL
			}
		}
		set_species_flag = can_has_food_upkeep
	} 
}
#planet
vop_optimaze_game_rule_is_new_colony = {
	remove_planet_flag = can_enable_is_new_colony
	if = {
		limit = { 
			is_colony = yes colony_age < 180 pop_amount < 1000 
			NOT = { has_planet_flag = has_building_kuat_command_center_auto } 
		}
		set_planet_flag = can_enable_is_new_colony
	}
}
######rule################################

######other###############################
vop_optimaze_action_116 = {
	if = {
		limit = {
			has_global_flag = galactic_market_founded
			OR = {
				NOT = { is_on_market = volatile_motes }
				NOT = { is_on_market = exotic_gases }
				NOT = { is_on_market = rare_crystals }
				NOT = { is_on_market = sr_living_metal }
				NOT = { is_on_market = sr_zro }
				NOT = { is_on_market = sr_dark_matter }
			}
		}
		if = {
			limit = {
				NOT = { is_on_market = volatile_motes }
				any_playable_country = {
					is_galactic_community_member = yes
					resource_stockpile_compare = { resource = volatile_motes value >= 1 }
				}
			}
			enable_on_market = volatile_motes
		}
		else_if = {
			limit = {
				NOT = { is_on_market = exotic_gases }
				any_playable_country = {
					is_galactic_community_member = yes
					resource_stockpile_compare = { resource = exotic_gases value >= 1 }
				}
			}
			enable_on_market = exotic_gases
		}
		else_if = {
			limit = {
				NOT = { is_on_market = rare_crystals }
				any_playable_country = {
					is_galactic_community_member = yes
					resource_stockpile_compare = { resource = rare_crystals value >= 1 }
				}
			}
			enable_on_market = rare_crystals
		}
		else_if = {
			limit = {
				NOT = { is_on_market = sr_living_metal }
				any_playable_country = {
					is_galactic_community_member = yes
					resource_stockpile_compare = { resource = sr_living_metal value >= 1 }
				}
			}
			enable_on_market = sr_living_metal
		}
		else_if = {
			limit = {
				NOT = { is_on_market = sr_zro }
				any_playable_country = {
					is_galactic_community_member = yes
					resource_stockpile_compare = { resource = sr_zro value >= 1 }
				}
			}
			enable_on_market = sr_zro
		}
		else_if = {
			limit = {
				NOT = { is_on_market = sr_dark_matter }
				any_playable_country = {
					is_galactic_community_member = yes
					resource_stockpile_compare = { resource = sr_dark_matter value >= 1 }
				}
			}
			enable_on_market = sr_dark_matter
		}
	}
}

vop_optimaze_enclave_2065 = {
	if = {
		limit = {
			is_country_type = enclave_mercenary
			any_owned_fleet = { is_leased = no }
		}
		country_event = { id = enclave.2070 }
	}
}

vop_optimaze_war_goals = {
	remove_country_flag = VOP_cb_CNTR_has_stop_colossus_cb
	remove_country_flag = VOP_cb_CNTR_has_total_war_cb_SECTION_1
	remove_country_flag = VOP_cb_CNTR_has_total_war_cb_SECTION_2
	remove_country_flag = VOP_cb_CNTR_has_total_war_cb_SECTION_3
	remove_country_flag = VOP_cb_CNTR_has_total_war_cb_SECTION_4
	if = {
		limit = { any_controlled_fleet = {
			is_ship_class = shipclass_military_special
			any_controlled_ship = { is_ship_size = colossus }
		} }
		set_country_flag = VOP_cb_CNTR_has_stop_colossus_cb
	}
	if = {
		limit = { VOP_cb_CNTR_has_total_war_cb_SECTION_1 = yes }
		set_country_flag = VOP_cb_CNTR_has_total_war_cb_SECTION_1
	}
	if = {
		limit = { VOP_cb_CNTR_has_total_war_cb_SECTION_2 = yes }
		set_country_flag = VOP_cb_CNTR_has_total_war_cb_SECTION_2
	}
	if = {
		limit = { VOP_cb_CNTR_has_total_war_cb_SECTION_3 = yes }
		set_country_flag = VOP_cb_CNTR_has_total_war_cb_SECTION_3
	}
	if = {
		limit = { VOP_cb_CNTR_has_total_war_cb_SECTION_4 = yes }
		set_country_flag = VOP_cb_CNTR_has_total_war_cb_SECTION_4
	}
}

VOP_ai_REROURCE_opt = {
	if = {
		limit = { 
			check_variable_arithmetic = { which = modifier:country_resource_max_add value >= 100000 }
			resource_stockpile_compare = { resource = $TYPE$ value > modifier:country_resource_max_add } 
		}
		export_resource_stockpile_to_variable = { 
			resource = $TYPE$
			variable = Vop_resource_stockpile_compare_$TYPE$
		}
		multiply_variable = { which = Vop_resource_stockpile_compare_$TYPE$ value = $MULT$ }
		add_resource = { $TYPE$ = -1 mult = Vop_resource_stockpile_compare_$TYPE$ }
		clear_variable = Vop_resource_stockpile_compare_$TYPE$
	}
}