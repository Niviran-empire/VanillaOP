NAI = {
	AI_FREE_JOBS_DISTRICT_BUILD_CAP = 6						# AI will not build new districts on a planet with more than this many free jobs
	AI_FREE_JOBS_BUILDING_BUILD_CAP = 6						# AI will not build new buildings on a planet with more than this many free jobs

	AI_NO_RETREAT_LIMIT = 3
	
	AI_JUMP_DRIVE_BRAVERY = 5								# AI will not want to jump into systems unless enemy is this much weaker than them, relatively

	WAR_OCCUPIED_BORDER_PRIO = 10							# Priority on targeting systems that are bordering our occupied space
	WAR_OWN_BORDER_PRIO = 20								# Priority on targeting systems that are bordering us
	WAR_ALLY_BORDER_PRIO = 8								# Priority on targeting systems that are bordering allies
	WAR_NO_BORDER_PRIO = 0.5								# Priority on targeting systems that are in the middle of hostile space
	WAR_DEFENSE_OWN_PRIO = 7								# Priority on defending own borders
	WAR_DEFENSE_CONTROLLED_PRIO = 5							# Priority on defending conquered systems
	WAR_DEFENSE_ALLY_PRIO = 14								# Priority on defending allies
	WAR_NEUTRAL_SPACE_PRIO = 0.5							# Priority on targeting enemies in neutral space
	WAR_ATTACK_CLAIM_PRIO = 6								# Priority on targeting enemy systems we have claimed
	WAR_DEFENSE_CLAIM_PRIO = 2								# Priority on defending claimed system we have conquered
	WAR_DEFENSE_OWN_PLANET_PRIO = 1							# Priority on defending own planets in a controlled system
	WAR_DEFENSE_OWN_PLANET_ENEMY_CONTROL_PRIO = 9			# Priority on defending own planets in an enemy controlled system

	WAR_ATTACK_PLANET_PRIO = 2								# Priority on targeting enemy systems with planets
	WAR_ATTACK_PLANET_CONTROLLED_SYSTEM_PRIO = 11			# Priority on targeting enemy planets in controlled systems
	WAR_ATTACK_STARBASE_PRIO = 1							# Priority on targeting enemy systems with upgraded starbases
	WAR_DEFEND_STARBASE_PRIO = 0.5							# Priority on defending systems with an upgraded starbase
	WAR_ATTACK_MILITARY_FLEET_PRIO = 10						# Priority on targeting enemy military fleets
	WAR_ATTACK_JUMP_DRIVE_FLEET_PRIO = 15					# Priority on targeting vulnerable jump-drive fleets that are in cooldown

	WAR_EXHAUSTION_TO_INTERVENE = 0.2						# AI may want to intervene to help empires with this war exhaustion or higher

	MIN_DISTANCE_TO_JUMP = 5								# Target must be at least this many systems away for AI to want to use jump drive

	ENEMY_FLEET_POWER_MULT = 0.5	

	FLEET_GROUP_ABORT_MISSION_MULT = 1.2 # The wanted amount of fleet power needs to have increased by at least this much for the AI to reconsider a mission once commited

	FLEET_DAMAGED_THRESHOLD_WAR = 0.10			# threshold when a fleet will be considered damaged and should return for repairs and avoid certain actions
	FLEET_DAMAGED_THRESHOLD_PEACE = 0.99		# same but for peace
	FLEET_ARMOR_DAMAGED_THRESHOLD_WAR = 0.10	# same as above but for armor
	FLEET_ARMOR_DAMAGED_THRESHOLD_PEACE = 0.99	# same but for armor in peace
}

NShip = {
	OUT_OF_COMBAT_SHIELD_REGEN_MULT		= 1.0		# Shields recharge this much faster outside combat

	OUT_OF_COMBAT_ARMOR_REGEN_MULT		= 1.0		# Armor recharge this much faster outside combat

	OUT_OF_COMBAT_HULL_REGEN_MULT		= 1.0		# Hull recharge this much faster outside combat

	MAX_DAMAGE_SCALING					= 4			# The maximum scaling value a target is allowed to have (ship size)
	
	#JUMP_DRIVE_WINDUP					= 5	# Jump drive windup in days
}

NGameplay = {
	DIPLOMACY_WEIGHT_BASE					= 0.0		# Base diplomacy weight for all empires
	DIPLOMACY_WEIGHT_STANCE_FACTOR			= 0			# Factors weight from Diplo Stance before it is added to diplo weight
	DIPLOMACY_WEIGHT_SPRAWL_FACTOR			= 0			# Factors Empire Sprawl before it is added to diplo weight
	DIPLOMACY_WEIGHT_NAVAL_FACTOR			= 0.001		# Factors Naval Power before it is added to diplo weight
	DIPLOMACY_WEIGHT_GESTALT_WEIGHT			= 1.0		# Gestalts gets a flat base value
	DIPLOMACY_WEIGHT_POP_BASE				= 1.0		# Base diplomacy weight for each pop
	DIPLOMACY_WEIGHT_POP_HAPPINESS			= 2.0		# as in formula: DIPLOMACY_WEIGHT_POP_BASE + (DIPLOMACY_WEIGHT_POP_HAPPINESS * Happiness)
	DIPLOMACY_WEIGHT_ECONOMY_FACTOR			= 0.1		# Factors Economic Power before it is added to diplo weight
	DIPLOMACY_WEIGHT_TECHNOLOGY_FACTOR		= 0.1		# Factors Technology Level before it is added to diplo weight
	DIPLOMACY_WEIGHT_NO_LEADER_PENALTY		= -0.25		# Penalty to diplomatic weight for not having the relevant council position

	# Planetary Ascension Tier cap formula:
	#     Max( ( Unlocked Ascension Perks Slots - 2 ), PLANET_ASCENSION_MIN ) +
	#     ( ( Unlocked Ascension Perks Slots == ASCENSION_PERKS_SLOTS ? ) PLANET_ASCENSION_COMPLETION_BONUS : 0 )
	PLANET_ASCENSION_STARTING_POINT		= 0 # Number of ascension perks unlocked slots required for Planetary Ascension
	PLANET_ASCENSION_MIN				= 0 # Minimum Planetary Ascension tier
	PLANET_ASCENSION_COMPLETION_BONUS	= 0 # Flat bonus on Planetary Ascension Tier cap when all the slots are unlocked

	# Planetary Ascension cost formula: ( Empire Sprawl * PLANET_ASCENSION_SPRAWL_SCALE) * ( 1 + ( Empire Wide Sum of Ascension Tiers * PLANET_ASCENSION_SUM_SCALE )
	PLANET_ASCENSION_SPRAWL_SCALE		= 10.0 # Scaling factor for Planetary Ascension cost based on the empire Sprawl
	PLANET_ASCENSION_SUM_SCALE			= 0.25 # Scaling factor for Planetary Ascension cost based on the empire-wide sum of Ascension Tiers
	PLANET_ASCENSION_SPRAWL_MODIFIER   = -0.10 # Reduction of planet sprawl per level of ascension

	# Designation modifier formula: MOD * ( 1 + ( Ascension Tier * PLANET_ASCENSION_MODIFIER_SCALE )
	PLANET_ASCENSION_MODIFIER_SCALE		= 0.50 # Scaling factor of the designation benefits, multiple instances will sum (first will be 1.25, then 1.50...)
	AGREEMENT_CHANGE_COOLDOWN_MONTHS 	= 3		# How often an agreement can be changed in months
	ASCENSION_PERKS_SLOTS 				= 128
	TRADITION_CATEGORIES_MAX			= 128	
	MAX_PLANET_BUILDING_SLOTS 			= 36	

	TRIGGERED_MODIFIER_UPDATE_DELAY 	= 30
}